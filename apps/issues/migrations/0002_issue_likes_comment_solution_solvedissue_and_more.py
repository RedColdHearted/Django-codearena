# Generated by Django 5.0.7 on 2024-08-09 06:04

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import django_extensions.db.fields


class Migration(migrations.Migration):
    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("issues", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="issue",
            name="likes",
            field=models.ManyToManyField(
                blank=True,
                help_text="User's likes to issue",
                related_name="issue_likes",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Issue likes",
            ),
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True,
                        verbose_name="modified",
                    ),
                ),
                ("content", models.TextField(verbose_name="Content")),
                (
                    "object_id",
                    models.PositiveIntegerField(verbose_name="Object ID"),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "likes",
                    models.ManyToManyField(
                        blank=True,
                        help_text="User's likes to comment",
                        related_name="comments_likes",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Comment likes",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User id",
                    ),
                ),
            ],
            options={
                "verbose_name": "Comment",
                "verbose_name_plural": "Comment",
            },
        ),
        migrations.CreateModel(
            name="Solution",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True,
                        verbose_name="modified",
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        choices=[("Python", "Python")],
                        max_length=30,
                        verbose_name="Language",
                    ),
                ),
                ("content", models.TextField(verbose_name="Content")),
                (
                    "average_time_usage",
                    models.FloatField(
                        null=True,
                        validators=[
                            django.core.validators.DecimalValidator(1, 10),
                        ],
                        verbose_name="Time usage",
                    ),
                ),
                (
                    "average_memory_usage",
                    models.FloatField(
                        null=True,
                        validators=[
                            django.core.validators.DecimalValidator(1, 10),
                        ],
                        verbose_name="Memory usage",
                    ),
                ),
                (
                    "testing_status",
                    models.CharField(
                        choices=[
                            ("Pending", "Pending"),
                            ("In Progress", "In Progress"),
                            ("Completed", "Completed"),
                        ],
                        max_length=15,
                        verbose_name="Solution status",
                    ),
                ),
                (
                    "issue",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="solutions",
                        to="issues.issue",
                        verbose_name="Issue",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="solutions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Solution",
                "verbose_name_plural": "Solutions",
            },
        ),
        migrations.CreateModel(
            name="SolvedIssue",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True,
                        verbose_name="modified",
                    ),
                ),
                (
                    "issue",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="solved_issues",
                        to="issues.issue",
                        verbose_name="Issue",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="solved_issues",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Solved issue by user",
                "verbose_name_plural": "Solved issues by users",
            },
        ),
        migrations.CreateModel(
            name="TestCaseResult",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True,
                        verbose_name="modified",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Complete", "Complete"),
                            ("Fail", "Fail"),
                            ("Error", "Error"),
                        ],
                        max_length=10,
                        verbose_name="Status",
                    ),
                ),
                (
                    "execution_log",
                    models.TextField(
                        blank=True,
                        help_text="This field contains output of executed test case",
                        verbose_name="Execution log",
                    ),
                ),
                (
                    "time_used",
                    models.FloatField(
                        null=True,
                        validators=[
                            django.core.validators.DecimalValidator(1, 3),
                            django.core.validators.MinValueValidator(0.1),
                            django.core.validators.MaxValueValidator(6.1),
                        ],
                        verbose_name="Time used",
                    ),
                ),
                (
                    "memory_used",
                    models.FloatField(
                        null=True,
                        validators=[
                            django.core.validators.DecimalValidator(3, 1),
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(256),
                        ],
                        verbose_name="Memory used",
                    ),
                ),
                (
                    "solution",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="test_cases_results",
                        to="issues.solution",
                        verbose_name="Solution",
                    ),
                ),
                (
                    "test_case",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="test_cases_results",
                        to="issues.testcase",
                        verbose_name="Test case",
                    ),
                ),
            ],
            options={
                "verbose_name": "Test case result",
                "verbose_name_plural": "Test case results",
            },
        ),
    ]
