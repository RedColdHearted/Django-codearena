# Generated by Django 5.0.7 on 2025-01-24 13:57

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models

import django_extensions.db.fields


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="Example",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True,
                        verbose_name="modified",
                    ),
                ),
                ("input", models.TextField(verbose_name="Input")),
                ("output", models.TextField(verbose_name="Output")),
                (
                    "explanation",
                    models.TextField(blank=True, verbose_name="Explanation"),
                ),
                (
                    "order",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
            ],
            options={
                "verbose_name": "Example",
                "verbose_name_plural": "Examples",
            },
        ),
        migrations.CreateModel(
            name="Issue",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True,
                        verbose_name="modified",
                    ),
                ),
                (
                    "title",
                    models.CharField(max_length=50, verbose_name="Title"),
                ),
                ("description", models.TextField(verbose_name="Description")),
                (
                    "hint",
                    models.TextField(
                        blank=True,
                        help_text="A hint that will push the user towards solving the issue",
                        verbose_name="Hint",
                    ),
                ),
                (
                    "complexity",
                    models.CharField(
                        choices=[
                            ("Easy", "Easy"),
                            ("Medium", "Medium"),
                            ("Hard", "Hard"),
                        ],
                        help_text="Levels that are associated with the difficulty of finding a solution",
                        max_length=15,
                        verbose_name="Complexity",
                    ),
                ),
            ],
            options={
                "verbose_name": "Issue",
                "verbose_name_plural": "Issues",
            },
        ),
        migrations.CreateModel(
            name="Solution",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True,
                        verbose_name="modified",
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        choices=[("Python", "Python")],
                        max_length=30,
                        verbose_name="Language",
                    ),
                ),
                ("content", models.TextField(verbose_name="Content")),
                (
                    "average_time_usage",
                    models.FloatField(
                        null=True,
                        validators=[
                            django.core.validators.DecimalValidator(1, 10),
                        ],
                        verbose_name="Time usage",
                    ),
                ),
                (
                    "average_memory_usage",
                    models.FloatField(
                        null=True,
                        validators=[
                            django.core.validators.DecimalValidator(1, 10),
                        ],
                        verbose_name="Memory usage",
                    ),
                ),
                (
                    "testing_status",
                    models.CharField(
                        choices=[
                            ("Pending", "Pending"),
                            ("In Progress", "In Progress"),
                            ("Completed", "Completed"),
                        ],
                        default="Pending",
                        max_length=15,
                        verbose_name="Solution status",
                    ),
                ),
            ],
            options={
                "verbose_name": "Solution",
                "verbose_name_plural": "Solutions",
            },
        ),
        migrations.CreateModel(
            name="SolvedIssue",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True,
                        verbose_name="modified",
                    ),
                ),
            ],
            options={
                "verbose_name": "Solved issue by user",
                "verbose_name_plural": "Solved issues by users",
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True,
                        verbose_name="modified",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        max_length=50,
                        unique=True,
                        verbose_name="Tag title",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tag",
                "verbose_name_plural": "Tags",
            },
        ),
        migrations.CreateModel(
            name="TestCase",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True,
                        verbose_name="modified",
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        choices=[("Python", "Python")],
                        default="Python",
                        max_length=30,
                        verbose_name="Language",
                    ),
                ),
                ("input_data", models.TextField(verbose_name="Input data")),
                (
                    "excepted_output",
                    models.TextField(verbose_name="Excepted output"),
                ),
                (
                    "order",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                (
                    "allocated_time",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(3),
                            django.core.validators.MaxValueValidator(6),
                        ],
                        verbose_name="Allocated time(seconds)",
                    ),
                ),
                (
                    "allocated_memory",
                    models.IntegerField(
                        default=128,
                        validators=[
                            django.core.validators.MinValueValidator(8),
                            django.core.validators.MaxValueValidator(256),
                        ],
                        verbose_name="Allocated memory(mb)",
                    ),
                ),
            ],
            options={
                "verbose_name": "Test case",
                "verbose_name_plural": "Test cases",
            },
        ),
        migrations.CreateModel(
            name="TestCaseResult",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True,
                        verbose_name="modified",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Complete", "Complete"),
                            ("Fail", "Fail"),
                            ("Error", "Error"),
                        ],
                        max_length=10,
                        verbose_name="Status",
                    ),
                ),
                (
                    "execution_log",
                    models.TextField(
                        blank=True,
                        help_text="This field contains output of executed test case",
                        verbose_name="Execution log",
                    ),
                ),
                (
                    "time_used",
                    models.FloatField(
                        null=True,
                        validators=[
                            django.core.validators.DecimalValidator(1, 3),
                            django.core.validators.MinValueValidator(0.1),
                            django.core.validators.MaxValueValidator(6.1),
                        ],
                        verbose_name="Time used",
                    ),
                ),
                (
                    "memory_used",
                    models.FloatField(
                        null=True,
                        validators=[
                            django.core.validators.DecimalValidator(3, 1),
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(256),
                        ],
                        verbose_name="Memory used",
                    ),
                ),
            ],
            options={
                "verbose_name": "Test case result",
                "verbose_name_plural": "Test case results",
            },
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True,
                        verbose_name="modified",
                    ),
                ),
                ("content", models.TextField(verbose_name="Content")),
                (
                    "object_id",
                    models.PositiveIntegerField(verbose_name="Object ID"),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Comment",
                "verbose_name_plural": "Comment",
            },
        ),
    ]
